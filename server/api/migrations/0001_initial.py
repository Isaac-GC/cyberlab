# Generated by Django 4.1.5 on 2023-01-07 03:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=255, unique=True, verbose_name='Username')),
                ('first_name', models.CharField(blank=True, max_length=255, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=255, verbose_name='Last Name')),
                ('email', models.CharField(max_length=255, unique=True, verbose_name='Email')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lab_title', models.CharField(max_length=100)),
                ('lab_status', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='LabModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=1000)),
                ('lab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.lab')),
            ],
        ),
        migrations.CreateModel(
            name='LabTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=100)),
                ('task_details', models.CharField(max_length=10000)),
                ('uses_vm', models.BooleanField()),
                ('uses_md', models.BooleanField()),
                ('terminal1', models.CharField(max_length=50)),
                ('terminal2', models.CharField(max_length=50)),
                ('terminal3', models.CharField(max_length=50)),
                ('terminal4', models.CharField(max_length=50)),
                ('custom_text', models.CharField(max_length=10000)),
                ('lab_module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.labmodule')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='LabTaskStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_status', models.CharField(choices=[('ND', 'Not Done'), ('F', 'Failure'), ('S', 'Success')], default='ND', max_length=2)),
                ('task_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.labtask')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_title', models.CharField(max_length=100)),
                ('roles', models.ManyToManyField(to='api.role')),
            ],
        ),
    ]
